---
# Source: spark/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: spark-secret
  labels:
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-3.0.0
    app.kubernetes.io/instance: spark
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
---
# Source: spark/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: spark-headless
  labels:
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-3.0.0
    app.kubernetes.io/instance: spark
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: spark
    app.kubernetes.io/instance: spark
---
# Source: spark/templates/svc-master.yaml
apiVersion: v1
kind: Service
metadata:
  name: spark-master-svc
  labels:
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-3.0.0
    app.kubernetes.io/instance: spark
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 7077
      targetPort: cluster
      name: cluster
      nodePort: null
    - port: 80
      targetPort: http
      name: http
      protocol: TCP
      nodePort: null
  selector:
    app.kubernetes.io/name: spark
    app.kubernetes.io/instance: spark
    app.kubernetes.io/component: master
---
# Source: spark/templates/hpa-worker.yaml
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-3.0.0
    app.kubernetes.io/instance: spark
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker-autoscaler
  name: spark-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: statefulset
    name: spark-worker
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 50
---
# Source: spark/templates/statefulset-master.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: spark-master
  labels:
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-3.0.0
    app.kubernetes.io/instance: spark
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
spec:
  serviceName: spark-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spark
      app.kubernetes.io/instance: spark
      app.kubernetes.io/component: master
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spark
        helm.sh/chart: spark-3.0.0
        app.kubernetes.io/instance: spark
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: master
    spec:
      
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
        - name: spark-master
          image: docker.io/chusj/spark:3.0.1
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: cluster
              containerPort: 7077
          volumeMounts:
          env:
            - name: SPARK_MODE
              value: "master"
            - name: SPARK_DAEMON_MEMORY
              value: "512m"
            - name: SPARK_MASTER_PORT
              value: "7077"
            - name: SPARK_MASTER_WEBUI_PORT
              value: "8080"
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 180
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 0.5
              memory: 512Mi
      volumes:
---
# Source: spark/templates/statefulset-worker.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: spark-worker
  labels:
    app.kubernetes.io/name: spark
    helm.sh/chart: spark-3.0.0
    app.kubernetes.io/instance: spark
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker
spec:
  serviceName: spark-headless
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: spark
      app.kubernetes.io/instance: spark
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spark
        helm.sh/chart: spark-3.0.0
        app.kubernetes.io/instance: spark
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: worker
    spec:
      
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
        - name: spark-worker
          image: docker.io/chusj/spark:3.0.1
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          volumeMounts:
          env:
            - name: SPARK_MODE
              value: "worker"
            - name: BASH_DEBUG
              value: "0"
            - name: SPARK_DAEMON_MEMORY
              value: "256m"
            ## There are some environment variables whose existence needs
            ## to be checked because Spark checks if they are null instead of an
            ## empty string
            - name: SPARK_WORKER_WEBUI_PORT
              value: "8081"
            - name: SPARK_DAEMON_JAVA_OPTS
              value: 
            - name: SPARK_MASTER_URL
              value: spark://spark-master-svc:7077
            # If you use a custom properties file, it must be loaded using a ConfigMap
            - name: SPARK_WORKER_OPTS
              value: 
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 180
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits:
              cpu: "0.50"
              memory: 512Mi
            requests:
              cpu: "0.25"
              memory: 256Mi
      volumes:
